{"version":3,"sources":["components/Navigation/navbar.jsx","reducers/store.js","components/Util_Components/buttons.jsx","components/Accounts/account_form.jsx","components/Expenses/expense_form.jsx","components/Categories/categories_form.jsx","components/Expenses/expenses_table.jsx","components/Accounts/accounts.jsx","components/Categories/categories.jsx","components/Expenses/expense_chart.jsx","components/Expenses/expenses.jsx","App.js","index.js"],"names":["NavBar","to","className","AppContext","createContext","initialState","accounts","categories","expenses","reducer","state","action","newState","type","payload","id","Object","values","forEach","expense","parseInt","account","category","Error","AppContextProvider","props","useReducer","dispatch","Provider","value","children","DeleteButton","message","useContext","onClick","window","confirm","icon","faTrashAlt","AccountForm","currAcct","useState","title","setTitle","setType","onSubmit","e","preventDefault","Date","valueOf","htmlFor","required","onChange","event","target","ExpenseForm","currExpense","amount","setAmount","date","setDate","setAccount","setCategory","map","acct","key","cat","name","CategoryForm","currCat","setName","color","setColor","ExpensesTable","columns","data","parent","useTable","useSortBy","useExpanded","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","visibleColumns","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","faCaretDown","faCaretUp","row","idx","Fragment","getRowProps","cells","cell","getCellProps","isExpanded","colSpan","length","AccountsIndex","useMemo","Header","accessor","Cell","getToggleRowExpandedProps","faEdit","CategoriesIndex","ExpenseChart","filteredData","useEffect","document","getElementById","remove","chartContainer","newCanvas","createElement","attribute","createAttribute","setAttributeNode","appendChild","ctx","getContext","results","sorted","sort","a","b","labels","dataSets","undefined","categoryName","label","backgroundColor","sets","keys","i","push","buildChartData","Chart","datasets","options","scales","xAxes","stacked","yAxes","ticks","beginAtZero","Expenses","acctFilterType","setAcctFilterType","acctFilterValue","setAcctFilterValue","catFilterType","setCatFilterType","catFilterValue","setCatFilterValue","updatedResults","JSON","parse","stringify","getFilteredResults","assign","accountName","faMinusCircle","faPlusCircle","noTableContent","data-type","dataset","App","exact","path","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0cec75b0.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => {\n\n  return (\n    <header>\n      <nav>\n        <Link to=\"/\">Expenses</Link>\n        <ul className=\"user-links\">\n          <li><Link to=\"/accounts\">My Accounts</Link></li>\n          <li><Link to=\"/categories\">My Categories</Link></li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default NavBar;\n","import React, { useReducer, createContext } from \"react\";\n\nexport const AppContext = createContext();\n\nconst initialState = {\n  accounts: {},\n  categories: {},\n  expenses: {}\n};\n\nconst reducer = (state, action) => {\n  let newState = { ...state };\n\n  switch (action.type) {\n    case 'ADD_ACCOUNT':\n      newState['accounts'][action.payload.id] = action.payload;\n      return newState;\n    case 'DELETE_ACCOUNT':\n      Object.values(newState['expenses']).forEach((expense) => {\n        if (parseInt(expense.account) === action.payload) delete newState['expenses'][expense.id];\n      });\n      delete newState['accounts'][action.payload];\n      return newState;\n    case 'ADD_CATEGORY':\n      Object.values(newState['expenses']).forEach((expense) => {\n        if (parseInt(expense.category) === action.payload) delete newState['expenses'][expense.id];\n      });\n      newState['categories'][action.payload.id] = action.payload;\n      return newState;\n    case 'DELETE_CATEGORY':\n      delete newState['categories'][action.payload];\n      return newState;\n    case 'ADD_EXPENSE':\n      newState['expenses'][action.payload.id] = action.payload;\n      return newState;\n    case 'DELETE_EXPENSE':\n      delete newState['expenses'][action.payload];\n      return newState;\n    default:\n      throw new Error();\n  }\n};\n\nexport const AppContextProvider = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <AppContext.Provider value={[state, dispatch]}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { AppContext } from '../../reducers/store';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport const DeleteButton = ({ id, type, message }) => {\n  const [state, dispatch] = useContext(AppContext);\n\n  const handleDelete = () => {\n    const answer = window.confirm(message)\n\n    if (answer) {\n      dispatch({\n        type,\n        payload: id,\n      });\n    }\n  };\n\n  return (\n    <button onClick={handleDelete}><FontAwesomeIcon icon={faTrashAlt}/></button>\n  );\n};","import React, { useState } from 'react';\n\nconst AccountForm = ({ state, dispatch, id }) => {\n  const currAcct = state.accounts[id];\n  const [title, setTitle] = useState(currAcct ? currAcct.title : '');\n  const [type, setType] = useState(currAcct ? currAcct.type : '');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: 'ADD_ACCOUNT',\n      payload: {\n        title,\n        type,\n        id: currAcct ? currAcct.id : new Date().valueOf(),\n      },\n    });\n\n    setTitle('');\n    setType('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <div className=\"form-input\">\n        <label htmlFor=\"account-title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"account-title\"\n          required\n          value={title}\n          onChange={(event) => setTitle(event.target.value)} />\n      </div>\n\n      <div className=\"form-input\">\n        <label htmlFor=\"account-type\">Type</label>\n        <select\n          id=\"account-type\"\n          required\n          value={type}\n          onChange={(event) => setType(event.target.value)}\n        >\n          <option value=\"\">- Select an Option -</option>\n          <option value=\"Cash\">Cash</option>\n          <option value=\"Check\">Check</option>\n          <option value=\"Credit\">Credit</option>\n          <option value=\"Bank Account\">Bank Account</option>\n        </select>\n      </div>\n\n      <button>{currAcct ? 'Update' : 'Add'}</button>\n    </form>\n  );\n};\n\nexport default AccountForm;\n","import React, { useState } from 'react';\n\nconst ExpenseForm = ({ state, dispatch, id }) => {\n  const accounts = state.accounts ? Object.values(state.accounts) : [];\n  const categories = state.categories ? Object.values(state.categories) : [];\n  const currExpense = state.expenses[id];\n\n  const [amount, setAmount] = useState(currExpense ? currExpense.amount : 0);\n  const [date, setDate] = useState(currExpense ? currExpense.date : '');\n  const [account, setAccount] = useState(currExpense ? currExpense.account : '');\n  const [category, setCategory] = useState(currExpense ? currExpense.category : '');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: 'ADD_EXPENSE',\n      payload: {\n        amount,\n        date,\n        account,\n        category,\n        id: currExpense ? currExpense.id : new Date().valueOf(),\n      },\n    });\n\n    setAmount(0);\n    setDate('');\n    setAccount('');\n    setCategory('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <div className=\"form-input\">\n        <label htmlFor=\"expense-date\">Date</label>\n        <input\n          type=\"date\"\n          id=\"expense-date\"\n          required\n          value={date}\n          onChange={(event) => setDate(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-input\">\n        <label htmlFor=\"expense-amount\">Amount</label>\n        <input\n          type=\"number\"\n          id=\"expense-amount\"\n          required\n          value={amount}\n          onChange={(event) => setAmount(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-input\">\n        <label htmlFor=\"expense-category\">Category</label>\n        <select\n          id=\"expense-account\"\n          required\n          value={account}\n          onChange={(event) => setAccount(event.target.value)}\n        >\n          <option value=\"\">-Select Account-</option>\n          {accounts.map((acct) => (\n            <option key={acct.id} value={acct.id}>{acct.title}</option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"form-input\">\n        <label htmlFor=\"expense-account\">Account</label>\n        <select\n          id=\"expense-category\"\n          required\n          value={category}\n          onChange={(event) => setCategory(event.target.value)}\n        >\n          <option value=\"\">-Select Category-</option>\n          {categories.map((cat) => (\n            <option key={cat.id} value={cat.id}>{cat.name}</option>\n          ))}\n        </select>\n      </div>\n\n      <button>{currExpense ? 'Update' : 'Add'}</button>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from 'react';\n\nconst CategoryForm = ({ state, dispatch, id }) => {\n  const currCat = state.categories[id];\n  const [name, setName] = useState(currCat ? currCat.name : '');\n  const [color, setColor] = useState(currCat ? currCat.color : '');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: 'ADD_CATEGORY',\n      payload: {\n        name,\n        color,\n        id: currCat ? currCat.id : new Date().valueOf(),\n      },\n    });\n\n    setName('');\n    setColor('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <div className=\"form-input\">\n        <label htmlFor=\"category-name\">Name</label>\n        <input\n          type=\"text\"\n          id=\"category-name\"\n          required\n          value={name}\n          onChange={(event) => setName(event.target.value)} />\n      </div>\n      <div className=\"form-input\">\n        <label htmlFor=\"category-color\">Color</label>\n        <select\n          id=\"category-color\"\n          required\n          value={color}\n          onChange={(event) => setColor(event.target.value)}\n        >\n          <option value=\"\">- Choose a Color -</option>\n          <option value=\"#e84e43\">Red</option>\n          <option value=\"#e89843\">Orange</option>\n          <option value=\"#e8da43\">Yellow</option>\n          <option value=\"#43e89e\">Green</option>\n          <option value=\"#43cde8\">Blue</option>\n          <option value=\"#4354e8\">Purple</option>\n          <option value=\"#e843bc\">Pink</option>\n        </select>\n      </div>\n\n      <button>{currCat ? 'Update' : 'Add'}</button>\n    </form>\n  );\n};\n\nexport default CategoryForm;\n","import React from 'react';\nimport { useTable, useSortBy, useExpanded } from 'react-table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport ExpenseForm from './expense_form.jsx';\nimport AccountForm from '../Accounts/account_form.jsx';\nimport CategoryForm from '../Categories/categories_form.jsx';\n\nconst ExpensesTable = ({\n  columns,\n  data,\n  state,\n  dispatch,\n  parent,\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    visibleColumns,\n  } = useTable({\n    columns,\n    data,\n  }, useSortBy, useExpanded);\n\n  return (\n    <>\n      <table className=\"table\" {...getTableProps()}>\n        <thead className=\"table-headers\">\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? <FontAwesomeIcon icon={faCaretDown} className=\"table-caret\"/>\n                        : <FontAwesomeIcon icon={faCaretUp} className=\"table-caret\"/> : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, idx) => {\n            prepareRow(row);\n            return (\n              <React.Fragment key={idx}>\n                <tr {...row.getRowProps()}>\n                  {row.cells.map((cell) => (\n                    <td {...cell.getCellProps()}>\n                      {cell.render('Cell')}\n                    </td>\n                  ))}\n                </tr>\n                {row.isExpanded ? (\n                  <tr>\n                    <td colSpan={visibleColumns.length}>\n                      {parent === 'Acct' ? (\n                        <AccountForm state={state} dispatch={dispatch} id={row.cells[2].value}/>\n                      ) : parent === 'Exp' ? (\n                        <ExpenseForm state={state} dispatch={dispatch} id={row.cells[5].value} />\n                      ) : (\n                        <CategoryForm state={state} dispatch={dispatch} id={row.cells[2].value}/>)}\n                    </td>\n                  </tr>\n                ) : null}\n              </React.Fragment>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default ExpensesTable;\n","import React, { useContext, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { DeleteButton } from '../Util_Components/buttons.jsx';\nimport { AppContext } from '../../reducers/store';\nimport AccountForm from './account_form.jsx';\nimport ExpensesTable from '../Expenses/expenses_table.jsx';\n\n\nconst AccountsIndex = () => {\n  const [state, dispatch] = useContext(AppContext);\n\n  const confirmDeleteMessage = 'Are you sure you want to delete this account? Deleting this will also delete any expenses filed under this account';\n\n  const getData = () => (\n    Object.values(state.accounts)\n  );\n\n  const data = getData();\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'title',\n      },\n      {\n        Header: 'Type',\n        accessor: 'type',\n      },\n      {\n        Header: 'Actions',\n        accessor: 'id',\n        Cell: ({ cell: { value }, row }) => (\n          <>\n            <DeleteButton id={value} type='DELETE_ACCOUNT' message={confirmDeleteMessage} />\n            <span {...row.getToggleRowExpandedProps()}>\n              <FontAwesomeIcon icon={faEdit} />\n            </span>\n          </>\n        ),\n      },\n    ],\n    []\n  );\n\n  return (\n    <>\n      <h1>My Accounts</h1>\n      <AccountForm state={state} dispatch={dispatch}/>\n      <ExpensesTable\n        columns={columns}\n        data={data}\n        state={state}\n        dispatch={dispatch}\n        parent=\"Acct\"\n      />\n    </>\n  );\n};\n\nexport default AccountsIndex;\n","import React, { useContext, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { DeleteButton } from '../Util_Components/buttons.jsx';\nimport { AppContext } from '../../reducers/store';\nimport CategoryForm from './categories_form.jsx';\nimport ExpensesTable from '../Expenses/expenses_table.jsx';\n\nconst CategoriesIndex = () => {\n  const [state, dispatch] = useContext(AppContext);\n\n  const confirmDeleteMessage = 'Are you sure you want to delete this category? Deleting this will also delete any expenses filed under this category';\n\n  const getData = () => (\n    Object.values(state.categories)\n  );\n\n  const data = getData();\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'Type',\n        accessor: 'color',\n      },\n      {\n        Header: 'Actions',\n        accessor: 'id',\n        Cell: ({ cell: { value }, row }) => (\n          <>\n            <DeleteButton id={value} type='DELETE_CATEGORY' message={confirmDeleteMessage} />\n            <span {...row.getToggleRowExpandedProps()}>\n              <FontAwesomeIcon icon={faEdit} />\n            </span>\n          </>\n        ),\n      },\n    ],\n    []\n  );\n\n  return (\n    <>\n      <h1>My Categories</h1>\n      <CategoryForm state={state} dispatch={dispatch}/>\n      <ExpensesTable\n        columns={columns}\n        data={data}\n        state={state}\n        dispatch={dispatch}\n        parent=\"Cat\"\n      />\n    </>\n  );\n};\n\nexport default CategoriesIndex;\n","import React, { useEffect } from 'react';\nimport Chart from 'chart.js';\n\nconst ExpenseChart = ({ filteredData }) => {\n  const buildChartData = () => {\n    const expenses = Object.values(filteredData.expenses);\n    const sorted = expenses.sort((a, b) => (\n      new Date(a.date) - new Date(b.date)\n    ));\n\n    const labels = [];\n    const dataSets = {};\n\n    sorted.forEach((expense) => {\n      if (dataSets[expense.categoryName] === undefined) {\n        dataSets[expense.categoryName] = {\n          label: expense.categoryName,\n          data: [],\n          backgroundColor: filteredData.categories[expense.category].color,\n        };\n      }\n    });\n\n    sorted.forEach((expense) => {\n      if (!labels.length || labels[labels.length - 1] !== expense.date) {\n        labels.push(expense.date);\n\n        const sets = Object.keys(dataSets);\n        for (let i = 0; i < sets.length; i += 1) {\n          const category = sets[i];\n          if (category === expense.categoryName) {\n            dataSets[category].data.push(parseInt(expense.amount));\n          } else {\n            dataSets[category].data.push(0);\n          }\n        }\n      } else {\n        const sets = Object.keys(dataSets);\n        for (let i = 0; i < sets.length; i += 1) {\n          const category = sets[i];\n          if (category === expense.categoryName) {\n            const { data } = dataSets[category];\n            data[data.length - 1] += parseInt(expense.amount);\n          }\n        }\n      }\n    });\n\n    return { labels, dataSets };\n  };\n\n  useEffect(() => {\n    const canvas = document.getElementById('expense-chart');\n    canvas.remove();\n\n    const chartContainer = document.getElementById('chart-container');\n    const newCanvas = document.createElement('canvas');\n    const attribute = document.createAttribute('id');\n    attribute.value = 'expense-chart';\n    newCanvas.setAttributeNode(attribute);\n    chartContainer.appendChild(newCanvas);\n\n    const ctx = document.getElementById('expense-chart').getContext('2d');\n\n    const results = buildChartData();\n\n    const chart = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: results.labels,\n        datasets: Object.values(results.dataSets),\n      },\n      options: {\n        scales: {\n          xAxes: [{\n            stacked: true,\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n            },\n            stacked: true,\n          }],\n        },\n      },\n    });\n  });\n\n  return (\n    <div id=\"chart-container\">\n      <canvas id=\"expense-chart\"></canvas>\n    </div>\n  );\n};\n\nexport default ExpenseChart;\n","import React, { useState, useContext, useMemo } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { AppContext } from '../../reducers/store';\nimport ExpenseForm from './expense_form.jsx';\nimport ExpensesTable from './expenses_table.jsx';\nimport { DeleteButton } from '../Util_Components/buttons.jsx';\nimport ExpenseChart from './expense_chart.jsx';\n\nconst Expenses = () => {\n  const [state, dispatch] = useContext(AppContext);\n  const [acctFilterType, setAcctFilterType] = useState('');\n  const [acctFilterValue, setAcctFilterValue] = useState('');\n  const [catFilterType, setCatFilterType] = useState('');\n  const [catFilterValue, setCatFilterValue] = useState('');\n\n  const getFilteredResults = () => {\n    const updatedResults = JSON.parse(JSON.stringify(state));\n    const expenses = Object.values(updatedResults.expenses);\n\n    for (let i = 0; i < expenses.length; i += 1) {\n      if (acctFilterValue && expenses[i][acctFilterType] !== acctFilterValue) {\n        delete updatedResults.expenses[expenses[i].id];\n      }\n\n      if (catFilterValue && expenses[i][catFilterType] !== catFilterValue) {\n        delete updatedResults.expenses[expenses[i].id];\n      }\n    }\n\n    return updatedResults;\n  };\n\n  const filteredData = acctFilterValue || catFilterValue ? getFilteredResults() : state;\n\n  const confirmDeleteMessage = 'This will permanently delete this expense. Are you sure you want to continue?';\n\n  const getData = () => (\n    Object.values(filteredData.expenses).map((expense) => (\n      Object.assign(expense, {\n        categoryName: filteredData.categories[expense.category].name,\n        accountName: filteredData.accounts[expense.account].title,\n      })\n    ))\n  );\n\n  const data = getData();\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: () => null,\n        id: 'expander',\n        Cell: ({ row }) => (\n          <span {...row.getToggleRowExpandedProps()}>\n            {row.isExpanded\n              ? <FontAwesomeIcon icon={faMinusCircle} />\n              : <FontAwesomeIcon icon={faPlusCircle} />}\n          </span>\n        ),\n      },\n      {\n        Header: 'Date',\n        accessor: 'date',\n      },\n      {\n        Header: 'Amount',\n        accessor: 'amount',\n        Cell: ({ cell: { value } }) => (`$${value}`),\n      },\n      {\n        Header: 'Category',\n        accessor: 'categoryName',\n      },\n      {\n        Header: 'Account',\n        accessor: 'accountName',\n      },\n      {\n        Header: 'Actions',\n        accessor: 'id',\n        Cell: ({ cell: { value } }) => <DeleteButton id={value} type='DELETE_EXPENSE' message={confirmDeleteMessage}/>,\n      },\n    ],\n    []\n  );\n\n  const noTableContent = data.length ? null : (\n    <p>No expenses added yet! Make sure you've added an Account and Category before you add expenses</p>\n  );\n\n  const handleAcctFilter = (e) => {\n    setAcctFilterType(e.target.dataset.type);\n    setAcctFilterValue(e.target.value);\n  };\n\n  const handleCatFilter = (e) => {\n    setCatFilterType(e.target.dataset.type);\n    setCatFilterValue(e.target.value);\n  };\n\n  return (\n    <>\n      <h1>Expense Report</h1>\n      <ExpenseChart filteredData={filteredData}/>\n      <h2>New Expense</h2>\n      <ExpenseForm state={state} dispatch={dispatch} />\n      <h2>All Expenses</h2>\n      <div>\n        <h3>Filter Expenses</h3>\n        <select\n          id=\"account-select\"\n          data-type=\"account\"\n          onChange={handleAcctFilter}\n        >\n          <option value=\"\">- Accounts -</option>\n          {Object.values(state.accounts).map((acct) => (\n            <option key={acct.id} value={acct.id}>{acct.title}</option>\n          ))}\n        </select>\n        <select\n          id=\"category-select\"\n          data-type=\"category\"\n          onChange={handleCatFilter}\n        >\n          <option value=\"\">- Categories -</option>\n          {Object.values(state.categories).map((category) => (\n            <option key={category.id} value={category.id}>{category.name}</option>\n          ))}\n        </select>\n      </div>\n      <ExpensesTable\n        columns={columns}\n        data={data}\n        state={filteredData}\n        dispatch={dispatch}\n        parent=\"Exp\"\n      />\n      {noTableContent}\n    </>\n  );\n};\n\nexport default Expenses;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport NavBar from './components/Navigation/navbar.jsx';\nimport AccountsIndex from './components/Accounts/accounts.jsx';\nimport CategoriesIndex from './components/Categories/categories.jsx';\nimport Expenses from './components/Expenses/expenses.jsx';\nimport { AppContextProvider } from './reducers/store';\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <AppContextProvider>\n        <main>\n          <Route exact path=\"/\">\n            <Expenses />\n          </Route>\n          <Route path=\"/accounts\">\n            <AccountsIndex />\n          </Route>\n          <Route path=\"/categories\">\n            <CategoriesIndex />\n          </Route>\n        </main>\n      </AppContextProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport './styles/reset.css';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter >\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}